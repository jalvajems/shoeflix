<%- include("../../views/partials/admin/header") %>

<main class="main-wrap">
    <section class="content-main">
        <div class="content-header">
            <h2 class="content-title">Offer List</h2>
            <a href="/admin/offer" class="btn btn-primary mb-3">Add New Offer</a>
        </div>
        <div class="card">
            <div class="card-body">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Discount</th>
                            <th>Applied To</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% offers.forEach(offer => { %>
                            <tr>
                                <td><%= offer.name %></td>
                                <td><%= offer.type %></td>
                                <td>
                                    <%= offer.discountType === "percentage" ? offer.discountValue + "%" : "â‚¹" + offer.discountValue %>
                                </td>
                                <td>
                                    <%= offer.type === "product" ? offer.productId?.productName : offer.categoryId?.name %>
                                </td>
                                <td><%= offer.startDate.toISOString().split("T")[0] %></td>
                                <td><%= offer.endDate.toISOString().split("T")[0] %></td>
                                <td><%= offer.status ? "Active" : "Inactive" %></td>
                                <td>
                                    <a href="#" class="btn btn-sm btn-warning edit-offer" data-id="<%= offer._id %>">Edit</a>
                                    <a href="/admin/offer-remove/<%= offer._id %>" class="btn btn-sm btn-danger delete-offer" data-id="<%= offer._id %>">Delete</a>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </section>
</main>

<!-- Edit Offer Modal -->
<div class="modal fade" id="editOfferModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Offer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editOfferForm"  method="POST">
                <div class="modal-body">
                    <input type="hidden" name="offerId" id="editOfferId">
                    <div class="form-group">
                        <label for="editName">Offer Name:</label>
                        <input type="text" class="form-control" id="editName" name="name" >
                    </div>
                    <div class="form-group">
                        <label for="editDiscountType">Discount Type:</label>
                        <select class="form-control" id="editDiscountType" name="discountType" >
                            <option value="percentage">Percentage</option>
                            <option value="amount">Fixed Amount</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editDiscountValue">Discount Value:</label>
                        <input type="number" class="form-control" id="editDiscountValue" name="discountValue" min="0" >
                    </div>
                    <div class="form-group">
                        <label for="editStartDate">Start Date:</label>
                        <input type="date" class="form-control" id="editStartDate" name="startDate" >
                    </div>
                    <div class="form-group">
                        <label for="editEndDate">End Date:</label>
                        <input type="date" class="form-control" id="editEndDate" name="endDate" >
                    </div>
                    <div class="form-group">
                        <label for="editStatus">Status:</label>
                        <select class="form-control" id="editStatus" name="status">
                            <option value="true">Active</option>
                            <option value="false">Inactive</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Update Offer</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function () {
        // Edit Offer Click Handler
        $(".edit-offer").click(function (e) {
            e.preventDefault();
            const offerId = $(this).data("id");
            $.get(`/admin/offer/${offerId}`, function (data) {
                if (data.success) {
                    const offer = data.offer;
                    $("#editOfferId").val(offer._id);
                    $("#editName").val(offer.name);
                    $("#editDiscountType").val(offer.discountType);
                    $("#editDiscountValue").val(offer.discountValue);
                    $("#editStartDate").val(offer.startDate.split("T")[0]);
                    $("#editEndDate").val(offer.endDate.split("T")[0]);
                    $("#editStatus").val(offer.status.toString());
                    $("#editOfferModal").modal("show");
                } else {
                    Swal.fire('Error!', data.message || 'Offer not found.', 'error');
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                Swal.fire('Error!', 'Failed to fetch offer: ' + errorThrown, 'error');
            });
        });

        // Form Validation and Submission
        $("#editOfferForm").submit(function (e) {
            e.preventDefault();

            // Get form values
            const name = $("#editName").val().trim();
            const discountType = $("#editDiscountType").val();
            const discountValue = parseFloat($("#editDiscountValue").val());
            const startDate = $("#editStartDate").val();
            const endDate = $("#editEndDate").val();
            const status = $("#editStatus").val();

            // Validation checks
            let errors = [];

            if (!name) {
                errors.push("Offer Name is required.");
            }

            if (isNaN(discountValue) || discountValue <= 0) {
                errors.push("Discount Value must be a positive number.");
            } else if (discountType === "percentage" && discountValue > 100) {
                errors.push("Percentage discount cannot exceed 100%.");
            }

            if (!startDate) {
                errors.push("Start Date is required.");
            }

            if (!endDate) {
                errors.push("End Date is required.");
            } else if (startDate && endDate && new Date(endDate) <= new Date(startDate)) {
                errors.push("End Date must be after Start Date.");
            }

            if (new Date(startDate) < new Date().setHours(0, 0, 0, 0)) {
                errors.push("Start Date cannot be in the past.");
            }

            // If there are errors, show them and stop submission
            if (errors.length > 0) {
                Swal.fire({
                    title: 'Validation Error',
                    html: errors.join("<br>"),
                    icon: 'error'
                });
                return;
            }

            // If validation passes, proceed with confirmation
            const formData = $(this).serialize();
            const offerId = $("#editOfferId").val();

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to update this offer?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, update it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/admin/offer-update/${offerId}`,
                        method: "PUT",
                        data: formData,
                        success: function (response) {
                            Swal.fire(
                                'Success!',
                                'Offer updated successfully.',
                                'success'
                            ).then(() => {
                                window.location.reload();
                            });
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            Swal.fire(
                                'Error!',
                                'Failed to update offer: ' + errorThrown,
                                'error'
                            );
                        }
                    });
                }
            });
        });

        // Delete Offer Handler (unchanged)
        $(".delete-offer").click(function (e) {
            e.preventDefault();
            const offerId = $(this).data("id");
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to delete this offer? This action cannot be undone!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/admin/offer-remove/${offerId}`,
                        method: "GET",
                        success: function (response) {
                            Swal.fire(
                                'Deleted!',
                                'Offer has been deleted.',
                                'success'
                            ).then(() => {
                                window.location.reload();
                            });
                        },
                        error: function () {
                            Swal.fire(
                                'Error!',
                                'Failed to delete offer.',
                                'error'
                            );
                        }
                    });
                }
            });
        });
    });
</script>
<%- include("../../views/partials/admin/footer") %>