<%- include("../../views/partials/admin/header") %>
<head>
   <style>
       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }

       .thumbnail {
           margin-right: 10px;
       }
       .input-upload {
           position: relative;
       }

       .error-message {
           color: red;
           display: none;
       }
   </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%=product._id%>" id="productForm"
                        enctype="multipart/form-data">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" value="<%=product.productName%>"
                                class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <input name="descriptionData" value="<%=product.description%>"
                                class="form-control border" rows="4">
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text"
                                        value="<%=product.regularPrice%>" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input name="salePrice" type="text" value="<%=product.salePrice%>"
                                        class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" value="<%=product.color%>"
                                        class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                </div>
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row gx-2">
                            <div class="col-sm-6 mb-3">
                                <label class="form-label">Category</label>
                                <select class="form-select border" style="width: 150px;" name="category">
                                    <%for(let i=0;i<cat.length;i++){%>
                                        <option value="<%=cat[i]._id%>">
                                            <%=cat[i].name%>
                                        </option>
                                    <%}%>
                                </select>
                                <div id="category-error" class="error-message"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card mb-2">
                    <div class="card-header">
                        <h4>Choose images</h4>
                    </div>
                        
                    <%for(let i=0; i<product.productImage.length; i++){%>
                        <div class="col-md-12">
                            <div class="mb-4">
                                <div class="col-12">
                                    <td>
                                        <input type="hidden" value="<%=product.productImage[i]%>" id="imageDatas">
                                        <img class="rounded" style="width: 50px; height: 60px;"
                                            src="/uploads/product-images/<%=product.productImage[i]%>" alt="">
                                            <span onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')" 
                                                style="position: absolute; margin-left: .5rem; cursor: pointer; font-weight: bold;">
                                              X
                                          </span>
                                          
                                    </td>
                                </div>
                            </div>
                        </div>
                    <%}%>
                    <div class="card-body">
                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                            <img src="" alt="" id="imgView1">
                            <input class="form-control" type="file" name="images" id="input1"
                                accept="image/png, image/jpeg, image/jpg"
                                onchange="viewImage1(event), viewImage(event, 1)">
                            <div id="images-error" class="error-message"></div>
                        </div>
                        <div class="image-cropper d-flex align-items-center"
                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                            <img src="" id="croppedImg1" alt="">
                            <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                        </div>
                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView2">
                                <input class="form-control" type="file" name="images" id="input2"
                                    accept="image/png, image/jpeg, image/jpg"
                                    onchange="viewImage2(event),viewImage(event, 2)">
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg2" alt="">
                                <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView3">
                                <input class="form-control" type="file" name="images" id="input3"
                                    accept="image/png, image/jpeg, image/jpg"
                                    onchange="viewImage3(event),viewImage(event, 3)">
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg3" alt="">
                                <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView4">
                                <input class="form-control" type="file" name="images" id="input4"
                                    accept="image/png, image/jpeg, image/jpg"
                                    onchange="viewImage4(event),viewImage(event, 4)">
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg4" alt="">
                                <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    <button class="btn btn-md rounded font-sm hover-up" id="updatebtn"
                        type="button" onclick="validateAndSubmit()">Update</button>
                </div>
                </form>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<%- include("../../views/partials/admin/footer") %>

<script>
    function validateAndSubmit() {
        if (validateForm()) {
            document.getElementById('productForm').submit();
        }
    }

    function validateForm() {
        console.log("validate form");
        clearErrorMessages();
        
        const name = document.getElementsByName('productName')[0].value;
        const description = document.getElementsByName('descriptionData')[0].value;
        const price = document.getElementsByName('regularPrice')[0].value;
        const saleprice = document.getElementsByName('salePrice')[0].value;
        const color = document.getElementsByName('color')[0].value;
        const category = document.getElementsByName('category')[0].value;
        const images = document.getElementById('input1');
        const imageDatas = document.getElementById("imageDatas")?.value;
        
        let isValid = true;
        
        if (name.trim() === "") {
            displayErrorMessage('productName-error', 'Please enter a product name.');
            isValid = false;
        }

        if (description.trim() === '') {
            displayErrorMessage('description-error', 'Please enter a product description.');
            isValid = false;
        }
        
        if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
            displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }
        
        if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
            displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }
        
        if (color.trim() === "") {
            displayErrorMessage('color-error', 'Please enter a color.');
            isValid = false;
        }
        
        if (!imageDatas && (images && images.files.length === 0)) {
            displayErrorMessage("images-error", 'Please select an image.');
            isValid = false;
        }
        
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        if (errorElement) {
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }
    }

    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
            element.style.display = "none";
        });
    }

    function viewImage1(event) {
        document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0]);
    }

    function viewImage2(event) {
        document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0]);
    }

    function viewImage3(event) {
        document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0]);
    }

    function viewImage4(event) {
        document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0]);
    }

    function viewImage(event, index) {
        let input = event.target;
        let reader = new FileReader();
        reader.onload = function () {
            let dataURL = reader.result;
            let image = document.getElementById('imgView' + index);
            image.src = dataURL;
            let cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 1,
                zoomable: true
            });
            let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
            cropperContainer.style.display = 'block';
            let saveButton = document.querySelector('#saveButton' + index);
            saveButton.addEventListener('click', async function () {
                let croppedCanvas = cropper.getCroppedCanvas();
                let croppedImage = document.getElementById("croppedImg" + index);
                croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                let timestamp = new Date().getTime();
                let fileName = `cropped-img-${timestamp}-${index}.png`;
                await croppedCanvas.toBlob(blob => {
                    let input = document.getElementById('input' + index);
                    let imgFile = new File([blob], fileName, blob);
                    const fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    input.files = fileList.files;
                });
                cropperContainer.style.display = 'none';
            });
        };
        reader.readAsDataURL(input.files[0]);
    }

    function deleteSingleImage(imageId, productId) {
        fetch('/admin/deleteImage', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                imageNameToServer: imageId,
                productIdToServer: productId,
            }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === true) {
                window.location.reload();
            }
        })
        .catch(error => {
            console.error('Error deleting image:', error);
        });
    }
</script>