<%- include("../../views/partials/admin/header") %>
<head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
   .error-message{
       color: red;
   }

   .thumbnails-container {
       display: flex;
       overflow-x: auto;
   }

   .thumbnail {
       margin-right: 10px;
   }
   
   .mb-4{
     margin-left: 10px;
     margin-right: 10px;
   }
   
   .form-control{
        padding-top: 12px;
   }
   
   .btn-primary{
        margin-left: 12px;
   }
</style>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Add New Product</h2>
               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">
                   <div class="card-body">
                       <form method="post" action="/admin/addProducts" enctype="multipart/form-data" id="productForm">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" placeholder="Type here" name="productName"
                                   class="form-control border" id="product_name" value="jordan">
                               <div id="productName-error" class="error-message"></div>
                           </div>
                           
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border"
                                   rows="4" ></textarea>
                               <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" name="regularPrice" type="text"
                                           class="form-control border" value="6000">
                                       <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input placeholder="$" name="salePrice" type="text" class="form-control border" id="sale_price" value="5999">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input placeholder="" name="quantity" type="text" class="form-control border" value="6">
                                       <div id="quantity-error" class="error-message" v></div>
                                   </div>
                               </div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Color</label>
                                       <input name="color" type="text" class="form-control border" value="blue">
                                       <div id="color-error" class="error-message"></div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-4">
                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                               <%for(let i=0;i<cat.length;i++){%>
                                                   <option value="<%=cat[i].name%>">
                                                       <%=cat[i].name%>
                                                   </option>
                                               <%}%>
                                           </select>
                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                               <div class="border row">
                                   <div id="addedImagesContainer" class="thumbnails-container"></div>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                       <input class="form-control" type="file" name="images" id="input1"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage1(event), viewImage(event, 1)">
                                       <div id="images-error" class="error-message"></div>
                                   </div>
                                   <div class="image-cropper d-flex align-items-center"
                                       style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                       <img src="" id="croppedImg1" alt="">
                                       <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                   </div>
                               </div>
                               
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView2">
                                       <input class="form-control" type="file" name="images" id="input2"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage2(event),viewImage(event, 2)">
                                   </div>
                                   <div class="image-cropper d-flex align-items-center"
                                       style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                       <img src="" id="croppedImg2" alt="">
                                       <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                   </div>
                               </div>
                               
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView3">
                                       <input class="form-control" type="file" name="images" id="input3"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage3(event),viewImage(event, 3)">
                                   </div>
                                   <div class="image-cropper d-flex align-items-center"
                                       style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                       <img src="" id="croppedImg3" alt="">
                                       <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                   </div>
                               </div>
                               
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView4">
                                       <input class="form-control" type="file" name="images" id="input4"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage4(event),viewImage(event, 4)">
                                   </div>
                                   <div class="image-cropper d-flex align-items-center"
                                       style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                       <img src="" id="croppedImg4" alt="">
                                       <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                   </div>
                               </div>
                           </div>
                           <div>
                               <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="validateAndSubmit()">Publish</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
   </section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<!-- Cropper.js JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>
// Form submission after validation
function validateAndSubmit() {
    if(validateForm()) {
        document.getElementById('productForm').submit();
    }
}

// Functions for previewing images
function viewImage1(event) {
    document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0]);
}

   function viewImage2(event) {
     document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0]);}
function viewImage3(event) {
    document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
}
function viewImage4(event) {
    document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0]);
}

// Function for processing the previewed images
function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    reader.onload = function() {
        let dataURL = reader.result;
        let image = document.getElementById("imgView" + index);
        image.src = dataURL;
        
        // Destroy any existing cropper
        if (image.cropper) {
            image.cropper.destroy();
        }
        
        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true
        });
        
        // Store the cropper instance on the image element
        image.cropper = cropper;

        let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
        cropperContainer.style.display = 'block';

        let saveButton = document.querySelector('#saveButton' + index);
        saveButton.addEventListener('click', async function() {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById('croppedImg' + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

            let timestamp = new Date().getTime();
            let fileName = `cropped.img-${timestamp}-${index}.png`;

            await croppedCanvas.toBlob(blob => {
                let input = document.getElementById('input' + index);
                let imgFile = new File([blob], fileName, {type: blob.type});
                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                input.files = fileList.files;
            });

            cropperContainer.style.display = 'none';
            cropper.destroy();
            image.cropper = null;
        });
    };
    reader.readAsDataURL(input.files[0]);
}

// Handle selected images thumbnails
const selectedImages = [];
document.getElementById("input1").addEventListener("change", handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById("addedImagesContainer");
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;
    for(let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImages.push(file);
        const thumbnail = document.createElement("div");
        thumbnail.classList.add("thumbnail");

        const img = document.createElement("img");
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px";
        img.style.height = "auto";
        
        const removeIcon = document.createElement("span");
        removeIcon.classList.add("remove-icon");
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener("click", function() {
            const index = selectedImages.indexOf(file);
            if(index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
        });
        
        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
}

// Form validation function
function validateForm() {
    clearErrorMessages();
    
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value; // Get sale price value
    const color = document.getElementsByName('color')[0].value;
    const images = document.getElementById('input1');
    const quantity = document.getElementsByName('quantity')[0].value;
    
    let isValid = true;
    
    // Product name validation
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z0-9\s]+$/.test(name.trim())) {
        displayErrorMessage('productName-error', 'Product name should contain only alphanumeric characters.');
        isValid = false;
    }
    
    // Description validation
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }
    
    // Quantity validation
    if (quantity.trim() === "" || isNaN(parseInt(quantity)) || parseInt(quantity) < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }
    
    // Regular price validation
    if (price.trim() === "" || !/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid positive price.');
        isValid = false;
    }
    
    // Sale price validation - Specific focus here
    console.log("Sale price value:", saleprice); // Debug
    
    if (saleprice.trim() !== "") {
        if (!/^\d+(\.\d{1,2})?$/.test(saleprice)) {
            displayErrorMessage('salePrice-error', 'Please enter a valid price format.');
            isValid = false;
        } else if (parseFloat(saleprice) < 0) {
            displayErrorMessage('salePrice-error', 'Sale price cannot be negative.');
            isValid = false;
        } else if (parseFloat(price) <= parseFloat(saleprice)) {
            displayErrorMessage('salePrice-error', 'Sale price must be less than regular price.');
            isValid = false;
        }
    }
    
    // Color validation
    if (color.trim() === "") {
        displayErrorMessage('color-error', 'Please enter a color.');
        isValid = false;
    }
    
    // Image validation
    if (images.files.length === 0) {
        displayErrorMessage("images-error", 'Please select at least one image.');
        isValid = false;
    }
    
    console.log("Form is valid:", isValid); // Debug
    return isValid;
}

// Display error message
function displayErrorMessage(elementId, message) {
    console.log("Displaying error for:", elementId, message); // Debug
    var errorElement = document.getElementById(elementId);
    
    if (!errorElement) {
        console.error("Error element not found:", elementId);
        return;
    }
    
    errorElement.textContent = message;
    errorElement.style.display = "block";
    errorElement.style.color = "red";
    errorElement.style.marginTop = "5px";
}

// Clear error messages
function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.textContent = '';
        element.style.display = "none";
    });
}
</script>
<%- include("../../views/partials/admin/footer") %>