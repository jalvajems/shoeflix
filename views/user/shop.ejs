<%- include("../../views/partials/user/header") %>
<style>
  /* Modern Color Palette */
  :root {
    --primary: #1e918b;
    --primary-dark: #167c76;
    --secondary: #46698f;
    --accent: #ff6b6b;
    --light: #f8f9fa;
    --dark: #343a40;
    --gray-light: #e9ecef;
    --gray: #ced4da;
    --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    --border-radius: 10px;
    --font-main: 'Poppins', sans-serif;
  }

  body {
    font-family: var(--font-main);
    background-color: #f8f9fa;
  }
  
  .main-container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 30px 20px;
  }
  
  /* Page Header */
  .shop-header {
    text-align: center;
    margin-bottom: 30px;
  }
  
  .shop-header h2 {
    font-size: 32px;
    font-weight: 600;
    color: var(--dark);
    margin-bottom: 10px;
  }
  
  .shop-header p {
    color: #6c757d;
    font-size: 16px;
  }
  
  /* Top Bar */
  .shop-topbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    background: white;
    padding: 15px 20px;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow);
  }
  
  /* Search Bar */
  .search-form {
    display: flex;
    align-items: center;
    background-color: var(--light);
    border-radius: 50px;
    overflow: hidden;
    width: 300px;
    transition: all 0.3s ease;
    border: 1px solid var(--gray);
  }
  
  .search-form:focus-within {
    box-shadow: 0 0 0 2px rgba(30, 145, 139, 0.3);
    border-color: var(--primary);
  }
  
  .search-input {
    flex: 1;
    padding: 12px 20px;
    font-size: 15px;
    border: none;
    outline: none;
    background-color: transparent;
    color: var(--dark);
  }
  
  .search-button {
    padding: 10px 20px;
    background-color: var(--primary);
    color: white;
    border: none;
    cursor: pointer;
    font-size: 15px;
    font-weight: 500;
    border-radius: 50px;
    margin-right: 5px;
    transition: all 0.3s ease;
  }
  
  .search-button:hover {
    background-color: var(--primary-dark);
    transform: translateY(-2px);
  }
  
  /* Product Container Layout */
  .product-list-container {
    display: flex;
    gap: 30px;
  }
  
  /* Sidebar */
  .sidebar {
    width: 280px;
    flex-shrink: 0;
  }
  
  .filter-section {
    background: white;
    border-radius: var(--border-radius);
    padding: 25px;
    margin-bottom: 25px;
    box-shadow: var(--shadow);
  }
  
  .filter-title {
    font-weight: 600;
    font-size: 18px;
    color: var(--dark);
    margin-bottom: 20px;
    text-align: left;
    position: relative;
    padding-bottom: 10px;
  }
  
  .filter-title:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 50px;
    height: 3px;
    background: var(--primary);
    border-radius: 3px;
  }
  
  .category-brand-container ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .filter-item {
    margin: 10px 0;
    text-align: left;
  }
  
  .filter-item a {
    text-decoration: none;
    color: #6c757d;
    display: block;
    padding: 8px 10px;
    transition: all 0.2s ease;
    border-radius: 5px;
    font-size: 15px;
  }
  
  .filter-item a:hover {
    color: var(--primary);
    background-color: rgba(30, 145, 139, 0.1);
    transform: translateX(5px);
  }
  
  /* Price Filter */
  .price-filter {
    background: white;
    border-radius: var(--border-radius);
    padding: 25px;
    box-shadow: var(--shadow);
  }
  
  .price-options {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }
  
  .price-button {
    padding: 12px 20px;
    background-color: var(--light);
    color: #6c757d;
    border: 1px solid var(--gray);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: center;
    font-size: 15px;
    font-weight: 500;
    width: 100%;
  }
  
  .price-button:hover {
    background-color: var(--primary);
    color: white;
    border-color: var(--primary);
    transform: translateY(-3px);
    box-shadow: 0 4px 8px rgba(30, 145, 139, 0.2);
  }
  
  /* Product Grid */
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 25px;
    width: 100%;
  }
  
  /* Product Card */
  .product-card {
    background: white;
    border-radius: var(--border-radius);
    overflow: hidden;
    transition: all 0.3s ease;
    box-shadow: var(--shadow);
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
    border: none;
  }
  
  .product-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12);
  }
  
  .product-card a {
    text-decoration: none;
    color: inherit;
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .product-image-container {
    position: relative;
    padding-top: 100%;
    overflow: hidden;
    background: #f5f5f5;
  }
  
  .product-card img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .product-card:hover img {
    transform: scale(1.05);
  }
  
  .product-info {
    padding: 20px;
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .product-card h4 {
    font-size: 18px;
    font-weight: 500;
    margin-bottom: 10px;
    color: var(--dark);
  }
  
  .product-price {
    display: flex;
    align-items: center;
    margin-top: auto;
  }
  
  .sale-price {
    font-size: 18px;
    font-weight: 600;
    color: var(--primary-dark);
  }
  
  .regular-price {
    font-size: 14px;
    color: #adb5bd;
    text-decoration: line-through;
    margin-left: 8px;
  }
  
  .discount-badge {
    position: absolute;
    top: 10px;
    left: 10px;
    background: var(--accent);
    color: white;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 600;
    z-index: 1;
  }
  
  /* Wishlist Button */
  .wishlist-btn {
    position: absolute;
    top: 15px;
    right: 15px;
    background-color: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    z-index: 2;
  }
  
  .wishlist-btn:hover {
    background: white;
    transform: scale(1.1);
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
  }
  
  .wishlist-btn .icon-heart-o::before {
    content: "\2661";
    font-size: 20px;
    color: #6c757d;
    transition: all 0.3s ease;
  }
  
  .wishlist-btn:hover .icon-heart-o::before {
    color: var(--accent);
  }
  
  .wishlist-btn.added .icon-heart-o::before {
    content: "\2665";
    color: var(--accent);
  }
  
  /* Add to Cart Button */
  .add-to-cart-btn {
    background-color: var(--secondary);
    color: white;
    padding: 12px 15px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 15px;
    font-weight: 500;
    width: 100%;
    margin-top: 15px;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }
  
  .add-to-cart-btn:hover {
    background-color: #395884;
    transform: translateY(-2px);
  }
  
  /* Pagination */
  .pagination {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin: 40px 0 20px;
  }
  
  .pagination a {
    padding: 10px 15px;
    background-color: white;
    border: 1px solid var(--gray);
    color: #6c757d;
    text-decoration: none;
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
  }
  
  .pagination a:hover {
    background-color: var(--light);
    border-color: var(--primary);
    color: var(--primary);
  }
  
  .pagination .active {
    background-color: var(--primary);
    border-color: var(--primary);
    color: white;
  }
  
  /* Empty State */
  .no-products {
    grid-column: 1 / -1;
    text-align: center;
    padding: 50px 20px;
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow);
  }
  
  .no-products p {
    font-size: 18px;
    color: #6c757d;
    margin-bottom: 20px;
  }
  
  /* Responsive Design */
  @media (max-width: 992px) {
    .product-list-container {
      flex-direction: column;
    }
    
    .sidebar {
      width: 100%;
    }
    
    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
  }
  
  @media (max-width: 768px) {
    .shop-topbar {
      flex-direction: column;
      gap: 15px;
    }
    
    .search-form {
      width: 100%;
    }
    
    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(170px, 1fr));
    }
  }
  
  @media (max-width: 576px) {
    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
      gap: 15px;
    }
    
    .product-card h4 {
      font-size: 16px;
    }
    
    .sale-price {
      font-size: 16px;
    }
  }
</style>

<div class="main-container">
  <section class="shop-page container">
    <!-- Shop Header -->
    <div class="shop-header">
      <h2>Our Collection</h2>
      <p>Discover the perfect pair for every occasion</p>
    </div>
    
    <!-- Top Bar with Search -->
    <div class="shop-topbar">
      <div class="search-bar">
        <form action="/filter" method="POST" class="search-form">
          <input type="text" name="query" placeholder="Search for shoes..." class="search-input" />
          <button type="submit" class="search-button">Search</button>
        </form>
      </div>
    </div>
    
    <!-- Product Container -->
    <div class="product-list-container">
      <!-- Sidebar -->
      <aside class="sidebar">
        <!-- Categories -->
        <div class="filter-section">
          <div class="filter-title">Categories</div>
          <div class="category-brand-container">
            <ul>
              <% for (let i = 0; i < category.length; i++) { %>
                <li class="filter-item">
                  <a href="/filter?category=<%= category[i]._id %>"><%= category[i].name %></a>
                </li>
              <% } %>
            </ul>
          </div>
        </div>
        
        <!-- Price Filter -->
        <div class="filter-section price-filter">
          <div class="filter-title">Filter by Price</div>
          <form id="price-filter-form">
            <div class="price-options">
              <a href="/filterPrice?gt=0&lt=5000"><button type="button" class="price-button">Under ₹5000</button></a>
              <a href="/filterPrice?gt=5000&lt=6000"><button type="button" class="price-button">₹5000 - ₹6000</button></a>
              <a href="/filterPrice?gt=6000&lt=7500"><button type="button" class="price-button">₹6000 - ₹7500</button></a>
              <a href="/filterPrice?gt=7500&lt=1000000"><button type="button" class="price-button">Above ₹7500</button></a>
            </div>
          </form>
        </div>
      </aside>

      <!-- Products Grid -->
      <main class="product-grid">
        <% if (products && products.length > 0) { %>
          <% products.forEach(function(product) { %>
            <div class="product-card">
              <!-- Wishlist Button -->
              <button class="wishlist-btn" onclick="toggleWishlist('<%= product._id %>', event)" title="Add to Wishlist">
                <span class="icon-heart-o"></span>
              </button>
              
              <!-- Discount Badge (if applicable) -->
              <% if (product.regularPrice && product.regularPrice > product.salePrice) { %>
                <div class="discount-badge">
                  <%= Math.round((1 - product.salePrice / product.regularPrice) * 100) %>% OFF
                </div>
              <% } %>
              
              <a href="/productDetails/<%= product._id %>">
                <div class="product-image-container">
                  <img src="/uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>" />
                </div>
                <div class="product-info">
                  <h4><%= product.productName %></h4>
                  <div class="product-price">
                    <span class="sale-price">₹<%= product.salePrice.toLocaleString('en-IN') %></span>
                    <% if (product.regularPrice) { %>
                      <span class="regular-price">₹<%= product.regularPrice.toLocaleString('en-IN') %></span>
                    <% } %>
                  </div>
                </div>
              </a>
            </div>
          <% }); %>
        <% } else { %>
          <div class="no-products">
            <p>No products available at the moment.</p>
          </div>
        <% } %>
      </main>
    </div>

    <!-- Pagination -->
    <div class="pagination">
      <% if (currentPage > 1) { %>
        <a href="/shop?page=<%= currentPage - 1 %>">Prev</a>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
        <a class="<%= currentPage === i ? 'active' : '' %>" href="/shop?page=<%= i %>"><%= i %></a>
      <% } %>
      <% if (currentPage < totalPages) { %>
        <a href="/shop?page=<%= currentPage + 1 %>">Next</a>
      <% } %>
    </div>
  </section>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Existing addToCart function (unchanged)
  function addToCart(productId) {
    // Your existing add-to-cart logic here
    console.log('Add to cart:', productId); // Placeholder
  }

  // Wishlist Functions
  async function checkWishlistStatus(productId) {
    try {
      const response = await fetch('/check-wishlist', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId })
      });
      if (!response.ok) {
        if (response.status === 401) {
          Swal.fire({
            icon: 'warning',
            title: 'Login Required',
            text: 'Please log in to manage your wishlist.',
            confirmButtonColor: '#46698f'
          }).then(() => {
            window.location.href = '/login';
          });
          return false;
        }
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      const data = await response.json();
      return data.success ? data.isInWishlist : false;
    } catch (error) {
      console.error('Error checking wishlist status:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Failed to check wishlist status.',
        confirmButtonColor: '#46698f'
      });
      return false;
    }
  }

  async function toggleWishlist(productId, event) {
    event.preventDefault();
    const button = event.target.closest('.wishlist-btn');

    try {
      const isInWishlist = await checkWishlistStatus(productId);

      if (isInWishlist) {
        Swal.fire({
          title: 'Remove from Wishlist?',
          text: "Do you want to remove this item from your wishlist?",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#46698f',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, remove it!'
        }).then(async (result) => {
          if (result.isConfirmed) {
            const response = await fetch('/remove-from-wishlist', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ productId })
            });
            const data = await response.json();

            if (data.success) {
              button.classList.remove('added');
              Swal.fire({
                icon: 'success',
                title: 'Removed',
                text: 'Item removed from wishlist!',
                confirmButtonColor: '#46698f'
              });
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Failed',
                text: data.message || 'Failed to remove from wishlist',
                confirmButtonColor: '#46698f'
              });
            }
          }
        });
      } else {
        const response = await fetch('/add-to-wishlist', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId })
        });
        const data = await response.json();

        if (data.success) {
          button.classList.add('added');
          Swal.fire({
            icon: 'success',
            title: 'Added',
            text: 'Product added to wishlist!',
            confirmButtonColor: '#46698f'
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Failed',
            text: data.message || 'Failed to add to wishlist',
            confirmButtonColor: '#46698f'
          });
        }
      }
    } catch (error) {
      console.error('Error toggling wishlist:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Something went wrong. Please try again.',
        confirmButtonColor: '#46698f'
      });
    }
  }

  // Initialize wishlist button states on page load
  document.addEventListener('DOMContentLoaded', async () => {
    const wishlistButtons = document.querySelectorAll('.wishlist-btn');
    for (const button of wishlistButtons) {
      const productId = button.getAttribute('onclick').match(/'(.*?)'/)[1];
      const isInWishlist = await checkWishlistStatus(productId);
      if (isInWishlist) {
        button.classList.add('added');
      }
    }
  });
</script>
<%- include("../../views/partials/user/footer") %>